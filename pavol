#!/bin/bash

pactl=$(type -p pactl)
if [ $? -ne 0 ]; then
	echo "pactl not found." >&2
	exit 1
fi
numargs=$#

function usage {
	local me=${0##*/}
	echo "Usage: ${me} [sink-name] <[-]Volume[%]>|toggle"
	echo "Example: ${me} -10%"
	echo "         ${me} sink-name +5%"
	echo "         ${me} toggle"
	echo "         ${me} sink-name toggle"
}

function get_default_sink {
	local sink=$(${pactl} stat \
		| grep "Default Sink" \
		| tr -d ' ' \
		| cut -d":" -f2-)
	# FIXME: Check for errors.
	echo "${sink}"
}

function get_sink_name {
	local search=$1
	local sink=$(${pactl} list short sinks \
		| grep "${search}" \
		| tr '[:space:]' ' ' \
		| cut -d" " -f2)
	# FIXME: Check for errors
	echo "${sink}"
}

function get_sink_command {
	local vol="$1"
	if [ "${vol}" == "toggle" ]; then
		echo "set-sink-mute"
	else
		echo "set-sink-volume"
	fi
}

function pavoldebug {
	if [ "x${PAVOL_DEBUG}" == "x1" ]; then
		echo $1
	fi
}

function main {
	# Handle help/usage request.
	case $1 in
		--help|-h)
			usage
			exit 0
			;;
	esac

	# Figure out which sink we want to use.
	local sink=""
	case ${numargs} in
		1)
			sink=$(get_default_sink)
			;;
		2)
			sink=$(get_sink_name $1)
			;;
		*)
			usage
			exit 1
			;;
	esac

	# Toggling or setting volume?
	local volume="${@: -1}"

	# Get sink command based on the "volume" being set.
	local cmd=$(get_sink_command $volume)

	# Occasionally helpful debug output
	pavoldebug "C: ${cmd}. S: ${sink}. V: ${volume}."

	# Finally set the volume.
	${pactl} ${cmd} ${sink} -- ${volume}
	exit $?
}
main $@
